/* TODO: as long as we can't set width from eval ... */
canvas {
  width: 0.25;
  width: 0.5;
  width: 1;
  width: 1.5;
  width: 2;
  width: 3;
  width: 4;
  width: 5;
  width: 6;
  width: 7;
  width: 8;
  width: 9;
  width: 10;
  width: 11;
  width: 12;
  width: 13;
  width: 14;
  width: 15;
  width: 16;
  width: 17;
  width: 18;
  width: 19;
  width: 20;
  width: 21;
  width: 33;
  casing-width: 0.5;
  casing-width: 1;
  casing-width: 1.5;
  casing-width: 2;
  casing-width: 2.5;
  font-size: 8;
  font-size: 9;
  font-size: 11;
  font-size: 13;
}

line|z5-8[highway=motorway]
{
  color: #ff6838;
  width: eval(switch(zoom(),
    5,     0.5,
    6,     1,
    7,     1.5,
    8,     2
  ));
  z-index: 12;
}
line|z9-[highway=motorway]
{
  set .highway_type=motorway;
  width: eval(round(power(zoom()-8, 1.2))+1);
  color: #ff6838;
  text-halo-color: #ff6838;
  z-index: 12;
}

line|z5-8[highway=trunk]
{
  color: #ff8a00;
  width: eval(switch(zoom(),
    5,     0.5,
    6,     1,
    7,     1.5,
    8,     2
  ));
  z-index: 11;
}
line|z9-[highway=trunk]
{
  set .highway_type=motorway;
  width: eval(round(power(zoom()-9, 1.2))+1);
  color: #ff8a00;
  text-halo-color: #ff8a00;
  z-index: 11;
}

line|z6-9[highway=primary],
line|z6-9[highway=primary_link]
{
  color: #deca00;
  width: eval(switch(zoom(),
    6,     0.5,
    7,     1,
    "8;9", 1.5
  ));
  z-index: 10;
}
line|z10-[highway=primary]
{
  set .highway_type=major;
  width: eval(round(power(zoom()-9, 1.2))+1);
  color: #ffce00;
  text-halo-color: #ffce00;
  z-index: 10;
}

line|z5-9[highway=secondary]
{
  color: #ded042;
  width: eval(switch(zoom(),
    "7", 1,
    "8;9", 1.5
  ));
  z-index: 9;
}
line|z10-[highway=secondary]
{
  set .highway_type=major;
  width: eval(round(power(zoom()-10, 1.2))+1);
  color: #ffef4c;
  text-halo-color: #ffef4c;
  z-index: 9;
}

line|z8-11[highway=tertiary]
{
  color: #ded896;
  width: eval(switch(zoom(),
    "8", 1,
    "9;10", 1.5
  ));
  z-index: 8;
}
line|z11-[highway=tertiary]
{
  set .highway_type=major;
  width: eval(round(power(zoom()-11, 1.2))+1);
  color: #fff8b5;
  text-halo-color: #fff8b5;
  z-index: 8;
}

line|z11-13[highway=road],
line|z11-13[highway=unclassified],
line|z11-13[highway=residential]
{
  color: #a0a0a0;
  width: eval(switch(zoom(),
    11, 0.5,
    12, 1,
    13, 1.5
  ));
  z-index: 7;
}
line|z14-[highway=road],
line|z14-[highway=unclassified],
line|z14-[highway=residential]
{
  set .highway_type=minor;
  width: eval(round(power(zoom()-12, 1.2))+1);
  color: #ffffff;
  text-halo-color: #ffffff;
  z-index: 7;
}

line|z11-13[highway=pedestrian],
line|z11-13[highway=living_street]
{
  color: #808080;
  width: eval(switch(zoom(),
    11, 0.5,
    12, 1,
    13, 1.5
  ));
  z-index: 6;
}
line|z14-[highway=pedestrian],
line|z14-[highway=living_street]
{
  set .highway_type=pedestrian;
  width: eval(round(power(zoom()-12, 1.2))+1);
  color: #cdcdcd;
  text-halo-color: #cdcdcd;
  z-index: 6;
}

line|z12-14[highway=service]
{
  color: #a0a0a0;
  width: eval(switch(zoom(),
    12, 0.5,
    13, 1,
    14, 1.5
  ));
  z-index: 5;
}
line|z15-[highway=service]
{
  set .highway_type=pedestrian;
  width: eval(round(power(zoom()-13, 1.2))+1);
  color: #ffffff;
  text-halo-color: #ffffff;
  z-index: 5;
}

line|z12-14[highway=footway],
line|z12-14[highway=cycleway],
line|z12-14[highway=bridleway],
line|z12-14[highway=steps],
line|z12-14[highway=platform]
{
  color: #cdcdcd;
  width: eval(switch(zoom(),
    12, 0.5,
    13, 1,
    14, 1.5
  ));
  z-index: 4;
}
line|z15-[highway=footway],
line|z15-[highway=cycleway],
line|z15-[highway=bridleway],
line|z15-[highway=steps],
line|z15-[highway=platform]
{
  set .highway_type=footway;
  width: eval(round(power(zoom()-11, 0.7))+0);
  color: #cdcdcd;
  text-halo-color: #cdcdcd;
  z-index: 4;
}

line|z12-[highway=track]
{
  color: #a77300;
  text-halo-color: #a77300;
  text-color: #ffffff;
  width: eval(switch(zoom(),
    "12;13", 0.5,
    "14;15", 1,
    "16"   , 2,
             3
  ));
  z-index: 3;
  set .highway_type=small;
}

line|z12-[highway=path]
{
  color: #a77300;
  text-halo-color: #a77300;
  text-color: #ffffff;
  width: eval(switch(zoom(),
    "12;13", 0.25,
    "14;15", 0.5,
    "16;17", 1,
             2
  ));
  z-index: 2;
  set .highway_type=small;
}

line.highway_type
{
  casing-width: eval(round(0.5+prop(width)/4)/2);
  casing-color: #909090;
  linecap: round;
  linejoin: round;
  casing-linecap: butt;
  font-size: ;
  font-size: eval(
    cond(prop(width)>=13, 13,
    cond(prop(width)>=10, 11,
    cond(prop(width)>=8, 9,
    cond(prop(width)>=5, 8,
    cond(zoom()>=17, 10,
    cond(zoom()>=16, 8
  )))))));
  text-halo-radius: 1;
}
line|z16[.highway_type=small]
{
  font-size: 8;
}
line|z17-[.highway_type=small]
{
  font-size: 10;
}
line[.highway_type=small][!bridge]
{
  casing-width: ;
}
line.highway_type[bridge]
{
  casing-color: #303030;
}

line|z10-[highway=primary][tunnel],
line|z10-[highway=primary_link][tunnel]
{
  color: #d8b321;
}
line|z10-[highway=motorway][tunnel],
line|z10-[highway=motorway_link][tunnel]
{
  color: #ff916e;
}
line|z10-[highway=trunk][tunnel],
line|z10-[highway=trunk_link][tunnel]
{
  color: #ffac4a;
}
line|z14-[highway=road][tunnel],
line|z14-[highway=unclassified][tunnel],
line|z14-[highway=residential][tunnel],
line|z15-[highway=service][tunnel]
{
  color: #d9d9d9;
}
line|z14-[highway=pedestrian][tunnel],
line|z14-[highway=living_street][tunnel],
line.path|z15-[tunnel]
{
  color: #a7a7a7;
}
line.highway_type[tunnel]
{
  text-halo-radius: 0;
  casing-dashes: 5,5;
  casing-linecap: butt;
}

line.highway_type::base_casing {
  layer: -9;
  casing-linecap: round;
  casing-width: eval(prop('casing-width', 'default'));
  casing-color: eval(prop('casing-color', 'default'));
  casing-dashes: eval(prop('casing-dashes', 'default'));
  casing-linecap: eval(prop('casing-linecap', 'default'));
  width: eval(prop('width', 'default'));
}
line.highway_type::label {
  layer: 11;
  text-position: line;
  text-spacing: 128;
  font-size: eval(prop('font-size', 'default'));
  text-halo-color: eval(prop('text-halo-color', 'default'));
  text-halo-radius: eval(prop('text-halo-radius', 'default'));
  text-color: eval(prop('text-color', 'default'));
  font-style: eval(prop('font-style', 'default'));
  font-size: eval(prop('font-size', 'default'));
  text: eval(cond(prop('font-size'); tag(name)));
}
